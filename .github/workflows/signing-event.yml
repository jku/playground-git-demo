name: Signing event

permissions: {}

on:
  push:
    branches:
      - 'sign/**'
  workflow_dispatch:

jobs:
  handle-branch-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0

      - name: Checkout playground
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          repository: jku/repository-playground
          ref: git-repo
          path: playground

      - name: Setup Python
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435
        with:
          python-version: 3.11
          cache: pip

      - name: Install dependencies
        run: |
          pip install -r playground/playground/repo/requirements.txt

      - name: Find fork point
        id: find-fork
        run: |
          FORK=$(git merge-base origin/main $GITHUB_SHA)
          echo "fork=$FORK" >> $GITHUB_OUTPUT
          echo "Forking point is $FORK"

      - name: Find the issue or open a new one
        id: find-issue
        if: steps.find-fork.outputs.fork != github.sha
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0
        with:
          script: |
            const repo = context.repo.owner + "/" + context.repo.repo
            const issues = await github.rest.search.issuesAndPullRequests({
              q: "label:${{github.ref_name}}+state:open+type:issue+repo:" + repo,
            })

            if (issues.data.total_count > 1) {
              core.setFailed("Found more than one issue with same label")
            } else if (issues.data.total_count == 0) {
              console.log("Creating issue")
              const response = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: "Signing event: ${{github.ref_name}}",
                body: "TODO: document signing event here",
                labels: ["${{github.ref_name}}"],
              })
              return response.data.number
            } else {
              console.log("Found existing issue")
              return issues.data.items[0].number
            }

      - name: Get Signing status
        id: signing-status
        if: steps.find-fork.outputs.fork != github.sha
        run: |
          echo "Signing branch [${{ github.ref_name }}](/${{ github.repository }}/tree/${{ github.ref_name }}) has moved to ${{ github.sha }}." > status-output
          echo "" >> status-output
          echo "### Current signing state" >> status-output

          if test -f "repository/root.json"; then
            playground/playground/repo/repo status ${{ steps.find-fork.outputs.fork }} >> status-output
            RETVAL=$?
          else
            echo "Repository does not exist yet" >> status-output
            RETVAL=1
          fi

          cat status-output
          echo "status=$RETVAL" >> $GITHUB_OUTPUT

      - name: Update issue, file PR
        if: steps.find-fork.outputs.fork != github.sha
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0
        with:
          script: |
            const fs = require('fs')
            body = fs.readFileSync('./status-output').toString()

            if (${{ steps.signing-status.outputs.status }} == 0) {
              const pull = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: '${{ github.ref_name }}',
                base: 'main',
                title: 'Signing event ${{ github.ref_name }}',
                body: 'This is a Pull request for signing event ${{ github.ref_name }}, see issue #${{ steps.find-issue.outputs.result }}.',
              })
              console.dir(pull)
              body += "### Pull request filed\n\n"
              body += "Threshold of signatures has been reached. Pull request #" + pull.data.number + " has been filed."
            }

            github.rest.issues.createComment({
              issue_number: ${{ steps.find-issue.outputs.result }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body,
            })
